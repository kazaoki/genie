#!/usr/bin/env node
parcelRequire=function(e,r,n){var t="function"==typeof parcelRequire&&parcelRequire,i="function"==typeof require&&require;function u(n,o){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!o&&f)return f(n,!0);if(t)return t(n,!0);if(i&&"string"==typeof n)return i(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}a.resolve=function(r){return e[n][1][r]||r};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,a,l,l.exports)}return r[n].exports;function a(e){return u(a.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=t;for(var o=0;o<n.length;o++)u(n[o]);return u}({3:[function(require,module,exports) {
"use strict";function e(e){return function(){var r=e.apply(this,arguments);return new Promise(function(e,t){return function o(s,n){try{var p=r[s](n),l=p.value}catch(e){return void t(e)}if(!p.done)return Promise.resolve(l).then(function(e){o("next",e)},function(e){o("throw",e)});e(l)}("next")})}}const r=require("fs"),t=require("string-width"),o=require("cli-color"),s=require("jp-wrap")(o.windowSize.width-8),n=require("readline").createInterface(process.stdin,process.stdout),p=require("child_process"),l=require("path"),i=require("util"),c=module.exports.d=(e=>console.log(i.inspect(e,{colors:!0,compact:!1,breakLength:10,depth:10}))),a=module.exports.h=((e,r=o.white)=>console.log("\n  "+r(e))),u=module.exports.getProjectRootDir=(()=>{let e="",t=__dirname,o=!0;do{try{r.accessSync(t+"/.genie"),e=t}catch(e){t===(t=l.dirname(t))&&(o=!1)}}while(""===e&&o);if(e)return e;S("先祖ディレクトリに .genie/ が見つかりませんでした。\n`genie init` などして初期化してください。")}),h=module.exports.Repeat=((e,r=1)=>{if(!r>0)return"";let t="";for(let o=0;o<r;o++)t+=e;return t}),d=module.exports.Message=((e,r="default",n=0)=>{let p=o.white,l=o.white;"primary"===r?(p=o.xterm(26),l=o.xterm(39)):"success"===r?(p=o.green,l=o.greenBright):"danger"===r?(p=o.red,l=o.redBright):"warning"===r?(p=o.yellow,l=o.yellowBright):"info"===r?(p=o.whiteBright,l=o.whiteBright):"whisper"===r&&(p=o.blackBright,l=o.blackBright);let i=(e=s(e.replace(/[\r\n]+$/,""))).split(/[\r\n]+/),c=0;for(let e in i){let r=t(i[e]);c<r&&(c=r)}c+=2,console.log("  "+p("┏")+p(h("─",c))+p("┓"));for(let e in i)n>0&&n==e&&console.log("  "+p("┣")+p(h("─",c))+p("┫")),console.log("  "+p("│")+l(" "+i[e]+" ")+h(" ",c-2-t(i[e]))+p("│"));console.log("  "+p("┗")+p(h("─",c))+p("┛"))}),g=module.exports.Messages=(e=>{Array.isArray(e)||(e=[e]);for(let r in e)for(let t in e[r])d(e[r][t],t)}),m=module.exports.Input=((e,r=20)=>{let s=o.bgBlack("  "),p=t(e="  "+e+"  ")+r,l=o.whiteBright.bgBlueBright,i=o.bgBlue;return console.log("\n"+s+l(h(" ",p))+"\n"+s+l(e+h(" ",r))+"\n"+s+l(h(" ",p))+"\n"+s+i(h(" ",p))),process.stdout.write(o.move.up(3)),process.stdout.write(o.move.right(p-r)),new Promise(e=>{n.on("line",r=>{process.stdout.write(o.move.down(3)),e(r)})})}),_=module.exports.Say=(e=>{if(0!==e.length)if(y())p.execSync(`say -r 300 "${e}"`);else if(w()){let t=r.mkdtempSync(process.env.TEMP+"/genie-say-"),o=t+"/say.js";r.writeFileSync(o,"var args = [];for(var i = 0; i < WScript.Arguments.length; i++) args.push(WScript.Arguments.Item(i));WScript.CreateObject('SAPI.SpVoice').Speak('<volume level=\"100\">'+'<rate speed=\"2\">'+'<pitch middle=\"0\">'+args.join(' ')+'</pitch>'+'</rate>'+'</volume>', 8);"),p.execSync(`start wscript ${o} "${e}"`),r.unlinkSync(o),r.rmdirSync(t)}}),$=module.exports.loadConfig=(e=>{let t=`${u()}/.genie/${e.config}`;try{r.accessSync(t)}catch(r){S(`設定ファイル（.genie/${e.config}）が見つかりませんでした。`)}let o=require(t).config;return o.runmode=e.mode,o.run={},o.run.base_name=e.shadow?o.core.docker.name+"-SHADOW":o.core.docker.name,o.run.project_dir=u(),e.shadow&&(o.run.shadow=1),o}),w=module.exports.isWindows=(()=>"win32"===process.platform),y=module.exports.isMac=(()=>"darwin"===process.platform),k=module.exports.hasDockerMachineEnv=(()=>{return 0===p.spawnSync("docker-machine").status}),S=module.exports.Error=(e=>{console.log(),d(`エラーが発生しました。\n${e}`,"danger",1),_("エラーが発生しました"),process.exit()}),f=module.exports.dockerDown=((r,t)=>new Promise((s,n)=>{let l=x(t,r),i=[];for(let e=0;e<l.length;e++)i.push(new Promise((r,t)=>{process.stdout.write(o.blackBright(`  ${l[e].name} (${l[e].id}) ...`));let s=p.spawnSync("docker",["rm","-f",l[e].id]);s.stderr.toString()?(process.stdout.write(o.red(" delete NG!\n")),t(s.stderr.toString())):(process.stdout.write(o.green(" deleted.\n")),r())}));e(function*(){yield Promise.all(i).catch(function(e){return e})})(),s()})),b=module.exports.dockerUp=((e,r)=>"mysql"===e?new Promise((e,t)=>{try{let o=Object.keys(r.db.mysql);for(let s=0;s<o.length;s++){let n=r.db.mysql[o[s]],l=[];l.push("run","-d","-it"),l.push("-e","TERM=xterm"),l.push("--name",`${r.run.base_name}-mysql-${o[s]}`),l.push("--label",`genie_project_dir="${r.run.project_dir}"`),r.run.shadow&&l.push("--label","genie_shadow"),l.push("-v",`${r.run.project_dir}/.genie/files/opt/mysql/:/opt/mysql/`),l.push("-v",`${n.volume_lock?"locked_":""}${r.run.base_name}-mysql-${o[s]}:/var/lib/mysql`),l.push("-e",`MYSQL_LABEL=${o[s]}`),l.push("-e",`MYSQL_ROOT_PASSWORD=${n.pass}`),l.push("-e",`MYSQL_DATABASE=${n.name}`),l.push("-e",`MYSQL_USER=${n.user}`),l.push("-e",`MYSQL_PASSWORD=${n.pass}`),l.push("-e",`MYSQL_CHARSET=${n.charset}`),r.core.docker.network&&l.push(`--net=${r.core.docker.network}`),r.core.docker.options&&l.push(`${r.core.docker.options}`),n.external_port&&l.push("-p",`${n.external_port}:3306`),l.push("--entrypoint=/opt/mysql/before-entrypoint.sh"),l.push("--restart=always"),l.push(n.repository),l.push("mysqld"),n.charset&&l.push(`--character-set-server=${n.charset}`),n.collation&&l.push(`--collation-server=${n.collation}`);let i=p.spawnSync("docker",l);i.stderr.toString()?t(i.stderr.toString()):e()}e()}catch(e){t(e)}}):"postgresql"===e?new Promise((e,t)=>{try{let o=Object.keys(r.db.postgresql);for(let s=0;s<o.length;s++){let n=r.db.postgresql[o[s]],l=[];l.push("run","-d","-it"),l.push("-e","TERM=xterm"),l.push("--name",`${r.run.base_name}-postgresql-${o[s]}`),l.push("--label",`genie_project_dir="${r.run.project_dir}"`),r.run.shadow&&l.push("--label","genie_shadow"),l.push("-v",`${r.run.project_dir}/.genie/files/opt/postgresql/:/opt/postgresql/`),l.push("-v",`${n.volume_lock?"locked_":""}${r.run.base_name}-postgresql-${o[s]}:/var/lib/postgresql`),l.push("-e",`POSTGRES_LABEL=${o[s]}`),l.push("-e",`POSTGRES_HOST=${n.host}`),l.push("-e",`POSTGRES_DB=${n.name}`),l.push("-e",`POSTGRES_USER=${n.user}`),l.push("-e",`POSTGRES_PASSWORD=${n.pass}`),l.push("-e",`POSTGERS_ENCODING=${n.encoding}`),l.push("-e",`POSTGERS_LOCALE=${n.locale}`),r.core.docker.network&&l.push(`--net=${r.core.docker.network}`),r.core.docker.options&&l.push(`${r.core.docker.options}`),n.external_port&&l.push("-p",`${n.external_port}:5432`),l.push("--entrypoint=/opt/postgresql/before-entrypoint.sh"),l.push("--restart=always"),l.push(n.repository),l.push("postgres");let i=p.spawnSync("docker",l);i.stderr.toString()?t(i.stderr.toString()):e()}e()}catch(e){t(e)}}):"genie"===e?new Promise((e,t)=>{let o=[];if(o.push("run","-d","-it"),o.push("-e","TERM=xterm"),o.push("-e","LANG=ja_JP.UTF-8"),o.push("-e","LC_ALL=ja_JP.UTF-8"),o.push("-v",r.run.project_dir+"/.genie/files/opt:/opt"),o.push("--label",`genie_project_dir="${r.run.project_dir}"`),r.run.shadow&&o.push("--label","genie_shadow"),o.push(`--name=${r.run.base_name}`),r.core.docker.network&&o.push(`--net=${r.core.docker.network}`),r.core.docker.options&&o.push(`${r.core.docker.options}`),o.push("--restart=always"),r.lang.perl.cpanfile_enabled&&o.push("-e","PERL5LIB=/perl/cpanfile-modules/lib/perl5"),r.db.postgresql){let e=Object.keys(r.db.postgresql);for(let t=0;t<e.length;t++){let s=`${r.run.base_name}-postgresql-${e[t]}`;o.push("--link",s),o.push("--add-host",r.db.postgresql[e[t]].host+":"+v(s,r))}}if(r.db.mysql){let e=Object.keys(r.db.mysql);for(let t=0;t<e.length;t++){let s=`${r.run.base_name}-mysql-${e[t]}`;o.push("--link",s),o.push("--add-host",r.db.mysql[e[t]].host+":"+v(s,r))}}if(r.trans.sshd&&o.push("-p",`${r.trans.sshd.external_port}:22`),r.http.apache&&(o.push("-v",`${r.run.project_dir}/${r.http.apache.public_dir}:/var/www/html`),r.http.apache.external_http_port&&o.push("-p",`${r.http.apache.external_http_port}:80`),r.http.apache.external_https_port&&o.push("-p",`${r.http.apache.external_https_port}:443`)),r.http.nginx&&(o.push("-v",`${r.run.project_dir}/${r.http.nginx.public_dir}:/usr/share/nginx/html`),r.http.nginx.external_http_port&&o.push("-p",`${r.http.nginx.external_http_port}:80`),r.http.nginx.external_https_port&&o.push("-p",`${r.http.nginx.external_https_port}:443`)),r.mail.sendlog.external_port&&o.push("-p",`${r.mail.sendlog.external_port}:9981`),r.log.fluentd&&o.push("-v",`${r.run.project_dir}/.genie/files/opt/td-agent:/etc/td-agent`),r.core.docker.hosts&&Array.isArray(r.core.docker.hosts)&&r.core.docker.hosts.length)for(let e=0;e<r.core.docker.hosts.length;e++)o.push(`--add-host=${r.core.docker.hosts[e]}`);if(o.push("-v",`${r.run.project_dir}/:/mnt/host/`),r.core.docker.volumes&&Array.isArray(r.core.docker.volumes)&&r.core.docker.volumes.length)for(let e=0;e<r.core.docker.volumes.length;e++)r.core.docker.volumes[e].match(/^\//)?o.push("-v",`${r.core.docker.volumes[e]}`):o.push("-v",`${r.run.project_dir}/${r.core.docker.volumes[e]}`);let s={},n=(e,r)=>{if("object"!=typeof e||Array.isArray(e))"object"==typeof e&&Array.isArray(e)?s[r]=JSON.stringify(e):s[r]=e;else{let t=Object.keys(e);for(let o=0;o<t.length;o++)n(e[t[o]],`${r}_${t[o].toUpperCase()}`)}};n(r,"GENIE"),s.GENIE_RUNMODE=r.runmode;let l=Object.keys(s);for(let e=0;e<l.length;e++)o.push("-e",`${l[e]}=${s[l[e]]}`);o.push(r.core.docker.image),c(o.join(" "));let i=p.spawnSync("docker",o);i.stderr.toString()?t(i.stderr.toString()):e()}):void 0),x=module.exports.existContainers=((e,r)=>{let t=["--filter",`label=genie_project_dir="${e.run.project_dir}"`];e.run.shadow&&t.push("--filter","label=genie_shadow"),r&&t.push("--filter",`name=${r}`);let o=p.spawnSync("docker",["ps","-a","--format","{{.ID}}\t{{.Names}}",...t]).stdout.toString().split(/\n/),s=[];for(let e=0;e<o.length;e++){let r=o[e].split(/\s+/);r[0]&&s.push({id:r[0],name:r[1]})}return!!s.length&&s}),v=module.exports.getContainerIp=((e,r)=>{try{let t;if(!(t=r.core.docker.network?p.spawnSync("docker",["inspect",`--format={{.NetworkSettings.Networks.${r.core.docker.network}.IPAddress}}`,e]):p.spawnSync("docker",["inspect","--format={{.NetworkSettings.IPAddress}}",e])).stderr.toString())return t.stdout.toString().replace(/[\r\n]$/,"");S(t.stderr.toString())}catch(e){S(e)}});
},{}],1:[function(require,module,exports) {
"use strict";function e(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,r){return function o(s,n){try{var i=t[s](n),l=i.value}catch(e){return void r(e)}if(!i.done)return Promise.resolve(l).then(function(e){o("next",e)},function(e){o("throw",e)});e(l)}("next")})}}const t=require("inquirer"),r=require("optimist"),o=require("cli-color"),s=require("child_process"),n=require("cliui")({width:o.windowSize.width-4}),i=require("./libs.js"),l=i.d,a=i.h;let c=r.usage("Usage: genie|g [Commands] [Options]").options("mode",{alias:"m",default:"develop",describe:"実行モードを指定可能"}).options("config",{alias:"c",default:"config.js",describe:"設定ファイルを指定可能"}).options("help",{alias:"h",describe:"説明表示"}).argv;if("demo"===c._[0])e(function*(){console.log(),i.Message("サンプル：default","default"),i.Message("サンプル：primary","primary"),i.Message("サンプル：success","success"),i.Message("サンプル：danger","danger"),i.Message("サンプル：warning","warning"),i.Message("サンプル：info","info"),i.Message("改行込み、1ライン入れも可能。\ntest1\ntest2\ntest3","default",1);let e=yield i.Input("入力BOX（入力文字を発音しますのでご注意）：",20);i.Message("入力された文字："+e),i.Say(e);try{throw new Error("エラーテスト（終了コード255）")}catch(e){console.log(e),process.exit(255)}process.exit()})();else if("ls"===c._[0]){let e=r.usage("Usage: genie|g ls [Options]").options("long",{alias:"l",describe:"コンテナ一覧がもうちょっとだけ詳細に出ます"}).argv;if(e.help&&(r.showHelp(),process.exit()),i.hasDockerMachineEnv()){console.log("\n  DockeMachines");let e=s.spawnSync("docker-machine",["ls"]);e.status&&i.Error(e.stderr.toString()),i.Message(e.stdout.toString(),"primary",1)}{console.log("\n  Images");let e=s.spawnSync("docker",["images"]);e.status&&i.Error(e.stderr.toString()),i.Message(e.stdout.toString(),"primary",1)}{console.log("\n  Volumes");let e=s.spawnSync("docker",["volume","ls","--format","table {{.Name}}\t{{.Driver}}\t{{.Scope}}\t{{.Mountpoint}}"]);e.status&&i.Error(e.stderr.toString()),i.Message(e.stdout.toString(),"primary",1)}{console.log("\n  Containers");let t=["--format","{{.Names}}\t{{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}"],r=["NAMES","ID","IMAGE","STATUS","PORTS"];e.long&&(t=["--format","{{.Names}}\t{{.ID}}\t{{.Image}}\t{{.Command}}\t{{.CreatedAt}}\t{{.Status}}\t{{.Ports}}\t{{.Labels}}"],r=["NAMES","ID","IMAGE","COMMAND","CREATED AT","STATUS","PORTS","LABELS"]);let o=s.spawnSync("docker",["ps","-a",...t]);o.status&&i.Error(o.stderr.toString());let l=o.stdout.toString().trim().split("\n");l.unshift(r.join("\t"));for(let t in l){let r=l[t].split(/\t/),o=[];for(let t in r){let s;e.long?(6==t&&(s=30),7==t&&(s=50)):4==t&&(s=30),o.push({text:r[t].replace(/, ?/g,"\n"),width:s,padding:[0,1,0,1]})}n.div(...o)}i.Message(n.toString(),"primary",1)}process.exit()}else if("config"===c._[0]){let e=r.usage("Usage: genie|g config [Options]").options("dump",{alias:"d",describe:"設定値を確認します。"}).argv;if(e.help)r.showHelp();else{let t=i.loadConfig(e);if(e.dump)l(t);else{let t=`${i.getProjectRootDir()}/.genie/${e.config}`;i.isWindows()?s.execSync(`start ${t}`):i.isMac()&&s.execSync(`open ${t}`)}}process.exit()}else if("langver"===c._[0]){let e=r.usage("Usage: genie|g langver [Options]").options("php",{describe:"PHPの利用可能なバージョン一覧を表示"}).options("perl",{describe:"Perlの利用可能なバージョン一覧を表示"}).options("ruby",{describe:"Rubyの利用可能なバージョン一覧を表示"}).options("node",{describe:"Node.jsの利用可能なバージョン一覧を表示"}).argv;if(e.help)r.showHelp();else if(e.php){let e=s.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/phpenv/plugins/php-build/bin/php-build --definitions"]);i.Message(e.stdout.toString(),"primary")}else if(e.perl){let e=s.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/plenv/plugins/perl-build/perl-build  --definitions"]);i.Message(e.stdout.toString(),"primary")}else if(e.ruby){let e=s.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/rbenv/plugins/ruby-build/bin/ruby-build  --definitions"]);i.Message(e.stdout.toString(),"primary")}else if(e.node){let e=s.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/ndenv/plugins/node-build/bin/node-build  --definitions"]);i.Message(e.stdout.toString(),"primary")}else r.showHelp();process.exit()}else if("up"===c._[0]){let t=r.usage("Usage: genie|g up [Options]").options("shadow",{alias:"s",describe:"データをマウントではなくコンテナにコピーした別のコンテナを起動する"}).argv;t.help&&r.showHelp();let o=i.loadConfig(t);try{let e=o.core.memo.up;e&&i.Messages(e)}catch(e){Error("メモの設定が異常です。")}e(function*(){i.existContainers(o)&&(yield Promise.all([i.dockerDown("/"+o.run.base_name+"-postgresql",o),i.dockerDown("/"+o.run.base_name+"-mysql",o),i.dockerDown("/"+o.run.base_name+"$",o),i.dockerDown(null,o)]).catch(function(e){return e}));let e=[];try{Object.keys(o.db.postgresql).length&&e.push(i.dockerUp("postgresql",o))}catch(e){Error(e)}try{Object.keys(o.db.mysql).length&&e.push(i.dockerUp("mysql",o))}catch(e){Error(e)}yield Promise.all(e).catch(function(e){i.Error(e)}),yield i.dockerUp("genie",o).catch(function(e){return i.Error(e)}),a("起動完了!!"),process.exit()})()}else if("down"===c._[0]){let t=r.usage("Usage: genie|g down [Options]").options("shadow",{alias:"s",describe:"データをマウントではなくコンテナにコピーした別のコンテナを終了する"}).argv;t.help&&(r.showHelp(),process.exit());let o=i.loadConfig(t);try{let e=o.core.memo.down;e&&i.Messages(e)}catch(e){Error("メモの設定が異常です。")}e(function*(){i.existContainers(o)&&(yield Promise.all([i.dockerDown("/"+o.run.base_name+"-postgresql",o),i.dockerDown("/"+o.run.base_name+"-mysql",o),i.dockerDown("/"+o.run.base_name+"$",o),i.dockerDown(null,o)]).catch(function(e){return e})),a("DONE!"),process.exit()})()}else if("build"===c._[0]){let t=r.usage("Usage: genie|g build [Options]").options("no-cache",{alias:"n",describe:"キャッシュを使用せずにビルドする"}).argv;t.help&&(console.log(),i.Message(r.help(),"success",1),process.exit());let n=i.loadConfig(t);e(function*(){if((yield i.Input(`${n.core.docker.image} イメージをビルドしてもよろしいでしょうか。[y/N]: `)).match(/^y$/i)){let e=["build","-t",n.core.docker.image];t["no-cache"]&&e.push("--no-cache"),e.push(`${i.getProjectRootDir()}/.genie/image/`),i.Message(`ビルドを開始します。\ndocker ${e.join(" ")}`,"info"),console.log();let r=s.spawn("docker",e);r.stdout.on("data",function(e){console.log(o.blackBright(e.toString().trim()))}),r.stderr.on("data",function(e){i.Error(e),process.exit()}),r.on("close",function(e){let t="ビルドが完了しました。";i.Message(t),i.Say(t),process.exit()})}})()}else if("cli"===c._[0]){let e=r.usage("Usage: genie|g cli [Options] [Commands]").options("host",{describe:"実行するホスト名を指定する"}).argv;e.help&&(console.log(),i.Message(r.help(),"primary",1),process.exit());let t=i.loadConfig(e),o=e.host?e.host:t.core.docker.name,n=process.argv.slice(process.argv.findIndex(t=>t===e._[1]));if(i.existContainers(t,"/"+o+"$")||i.Error("dockerコンテナが起動していません: "+o),1!==e._.length){let e=s.spawnSync("docker",["exec",o,...n]);e.status&&(i.Error(e.stderr.toString()||e.stdout.toString()),process.exit()),console.log(e.stdout.toString()),process.exit()}else s.spawnSync("docker",["exec","-it",o,"bash"],{stdio:"inherit"}),process.exit()}else if("reject"===c._[0]){let e=r.usage("Usage: genie|g reject [Options]").options("force",{alias:"f",describe:"lockedから始まる名前も対象にする"}).argv;e.help&&(console.log(),i.Message(r.help(),"primary",1),process.exit());let n=[],l=s.spawnSync("docker",["ps","-qa","--format","{{.Names}}\t{{.Status}}"]);l.status&&i.Error(l.stderr.toString());var d=!0,g=!1,p=void 0;try{for(var u,f=l.stdout.toString().trim().split(/\n/)[Symbol.iterator]();!(d=(u=f.next()).done);d=!0){let t=u.value;if(!t)continue;let r=t.split(/\t/),s=r[0],i=(r[1],s.match(/^locked_/)),l=`[Container] ${s}`;i&&(l=o.blackBright(l)),n.push({name:l,checked:!(i&&!e.f)})}}catch(e){g=!0,p=e}finally{try{!d&&f.return&&f.return()}finally{if(g)throw p}}let c=[];(l=s.spawnSync("docker",["volume","ls","--format","{{.Name}}\t{{.Driver}}"])).status&&i.Error(l.stderr.toString());var m=!0,h=!1,y=void 0;try{for(var S,w=l.stdout.toString().trim().split(/\n/)[Symbol.iterator]();!(m=(S=w.next()).done);m=!0){let t=S.value;if(!t)continue;let r=t.split(/\t/),s=r[0],n=(r[1],s.match(/^locked_/)),i=`[Volume] ${s}`;n&&(i=o.blackBright(i)),c.push({name:i,checked:!(n&&!e.f)})}}catch(e){h=!0,y=e}finally{try{!m&&w.return&&w.return()}finally{if(h)throw y}}let v=n.length+c.length;0===v&&(a("対象のオブジェクトはありませんでした。"),process.exit()),console.log(),t.prompt([{type:"checkbox",message:"削除したいものにチェックを入れて Enter してください。",name:"rejects",pageSize:100,choices:[...n,...c],validate:e=>!(e.length<1)||"１つ以上選ぶんだよ！"}]).then(e=>{process.stdout.write(o.move.up(v));for(let e=0;e<v;e++)process.stdout.write(o.erase.line),process.stdout.write(o.move.down(1));process.stdout.write(o.move.up(v-1));var t=!0,r=!1,n=void 0;try{for(var l,a=e.rejects[Symbol.iterator]();!(t=(l=a.next()).done);t=!0){let e=l.value,t=(e=o.strip(e)).match(/^\[(Container|Volume)\] (.+)$/);if("Container"===t[1]){let e=t[2];process.stdout.write(`  [Container] ${e} - `);let r=s.spawnSync("docker",["rm","-f",e]);r.status&&i.Error(r.stderr.toString()),process.stdout.write(o.green("deleted\n"))}else if("Volume"===t[1]){let e=t[2];process.stdout.write(`  [Volume] ${e} - `);let r=s.spawnSync("docker",["volume","rm","-f",e]);r.status&&i.Error(r.stderr.toString()),process.stdout.write(o.green("deleted\n"))}}}catch(e){r=!0,n=e}finally{try{!t&&a.return&&a.return()}finally{if(r)throw n}}})}else if("clean"===c._[0]){let e,t,n=r.usage("Usage: genie|g clean [Options]").options("force",{alias:"f",describe:"lockedから始まる名前も対象にする"}).argv;n.help&&(console.log(),i.Message(r.help(),"primary",1),process.exit());let l=0;e=["ps","-qa","--filter","exited=0","--format","{{.Names}}"],(t=s.spawnSync("docker",e)).status&&i.Error(t.stderr.toString());var v=!0,k=!1,b=void 0;try{for(var x,E=t.stdout.toString().trim().split(/\n/)[Symbol.iterator]();!(v=(x=E.next()).done);v=!0){let e=x.value;if(!e)continue;if(!n.f&&e.match(/^locked_/i))continue;l++||console.log(),process.stdout.write(`  [Container] ${e} - `);let t=s.spawnSync("docker",["rm","-fv",e]);t.status&&i.Error(t.stderr.toString()),process.stdout.write(o.green("deleted\n"))}}catch(e){k=!0,b=e}finally{try{!v&&E.return&&E.return()}finally{if(k)throw b}}e=["volume","ls","--filter","dangling=true","--format","{{.Name}}"],(t=s.spawnSync("docker",e)).status&&i.Error(t.stderr.toString());var M=!0,D=!1,_=void 0;try{for(var C,q=t.stdout.toString().trim().split(/\n/)[Symbol.iterator]();!(M=(C=q.next()).done);M=!0){let e=C.value;if(!e)continue;if(!n.f&&e.match(/^locked_/i))continue;l++||console.log(),process.stdout.write(`  [Volume] ${e} - `);let t=s.spawnSync("docker",["volume","rm","-f",e]);t.status&&i.Error(t.stderr.toString()),process.stdout.write(o.green("deleted\n"))}}catch(e){D=!0,_=e}finally{try{!M&&q.return&&q.return()}finally{if(D)throw _}}e=["images","-q","--filter","dangling=true"],(t=s.spawnSync("docker",e)).status&&i.Error(t.stderr.toString());var $=!0,O=!1,U=void 0;try{for(var j,P=t.stdout.toString().trim().split(/\n/)[Symbol.iterator]();!($=(j=P.next()).done);$=!0){let e=j.value;if(!e)continue;l++||console.log(),process.stdout.write(`  [Image] ${e} - `);let t=s.spawnSync("docker",["rmi",e]);t.status&&i.Error(t.stderr.toString()),process.stdout.write(o.green("deleted\n"))}}catch(e){O=!0,U=e}finally{try{!$&&P.return&&P.return()}finally{if(O)throw U}}l||a("対象のオブジェクトはありませんでした。"),process.exit()}else console.error(r.help()+"\nCommands:\n  init    \n  config  設定を確認する\n  ls      Dockerコンテナ状況を確認する\n  up      設定に基づきDockerコンテナを起動する\n  down    関連するコンテナのみ終了する\n  update  \n  cli     コンテナ内でコマンドを実行。またはコンテナに入る\n  reject  genie対象外のコンテナまたはボリュームを一括削除する\n  clean   不要なイメージ・終了済みコンテナ・リンクされてないボリュームを一括削除する\n  build   基本のdockerイメージをビルドする\n  langver 各種言語の利用可能なバージョンを確認する\n  mysql   \n  psql    \n  open    \n  ngrok   \n  logs    \n  dlsync  \n  httpd   \n  demo    デモ\n"),process.exit();
},{"./libs.js":3}]},{},[1])