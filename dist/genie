#!/usr/bin/env node
parcelRequire=function(e,r,n){var t="function"==typeof parcelRequire&&parcelRequire,i="function"==typeof require&&require;function u(n,o){if(!r[n]){if(!e[n]){var f="function"==typeof parcelRequire&&parcelRequire;if(!o&&f)return f(n,!0);if(t)return t(n,!0);if(i&&"string"==typeof n)return i(n);var c=new Error("Cannot find module '"+n+"'");throw c.code="MODULE_NOT_FOUND",c}a.resolve=function(r){return e[n][1][r]||r};var l=r[n]=new u.Module(n);e[n][0].call(l.exports,a,l,l.exports)}return r[n].exports;function a(e){return u(a.resolve(e))}}u.isParcelRequire=!0,u.Module=function(e){this.id=e,this.bundle=u,this.exports={}},u.modules=e,u.cache=r,u.parent=t;for(var o=0;o<n.length;o++)u(n[o]);return u}({3:[function(require,module,exports) {
"use strict";function e(e){return function(){var r=e.apply(this,arguments);return new Promise(function(e,t){return function o(s,n){try{var i=r[s](n),l=i.value}catch(e){return void t(e)}if(!i.done)return Promise.resolve(l).then(function(e){o("next",e)},function(e){o("throw",e)});e(l)}("next")})}}const r=require("fs"),t=require("string-width"),o=require("cli-color"),s=require("readline").createInterface(process.stdin,process.stdout),n=require("child_process"),i=require("path"),l=require("util"),p=module.exports.d=(e=>console.log(l.inspect(e,{colors:!0,compact:!1,breakLength:10,depth:10}))),c=module.exports.h=((e,r=o.white)=>console.log("\n  "+r(e))),a=module.exports.getProjectRootDir=(()=>{let e="",t=__dirname,o=!0;do{try{r.accessSync(t+"/.genie"),e=t}catch(e){t===(t=i.dirname(t))&&(o=!1)}}while(""===e&&o);if(e)return e;f("先祖ディレクトリに .genie/ が見つかりませんでした。\n`genie init` などして初期化してください。")}),u=module.exports.Repeat=((e,r=1)=>{if(!r>0)return"";for(var t="",o=0;o<r;o++)t+=e;return t}),d=module.exports.Message=((e,r="default",s=0)=>{var n=o.white,i=o.white;e=e.replace(/[\r\n]+$/,""),"primary"===r?(n=o.xterm(26),i=o.xterm(39)):"success"===r?(n=o.green,i=o.greenBright):"danger"===r?(n=o.red,i=o.redBright):"warning"===r?(n=o.yellow,i=o.yellowBright):"info"===r&&(n=o.whiteBright,i=o.whiteBright);var l=e.split(/[\r\n]+/),p=0;for(var c in l){var a=t(l[c]);p<a&&(p=a)}for(var c in p+=2,console.log("  "+n("┏")+n(u("─",p))+n("┓")),l)s>0&&s==c&&console.log("  "+n("┣")+n(u("─",p))+n("┫")),console.log("  "+n("│")+i(" "+l[c]+" ")+u(" ",p-2-t(l[c]))+n("│"));console.log("  "+n("┗")+n(u("─",p))+n("┛"))}),h=module.exports.Messages=(e=>{Array.isArray(e)||(e=[e]);for(let r in e)for(let t in e[r])d(e[r][t],t)}),g=module.exports.Input=((e,r=20)=>{var n=o.bgBlack("  "),i=t(e="  "+e+"  ")+r,l=o.whiteBright.bgBlueBright,p=o.bgBlue;return console.log("\n"+n+l(u(" ",i))+"\n"+n+l(e+u(" ",r))+"\n"+n+l(u(" ",i))+"\n"+n+p(u(" ",i))),process.stdout.write(o.move.up(3)),process.stdout.write(o.move.right(i-r)),new Promise(e=>{s.on("line",r=>{process.stdout.write(o.move.down(3)),e(r)})})}),m=module.exports.Say=(e=>{if(0!==e.length)if(_())n.execSync(`say -r 300 "${e}"`);else if(w()){let t=r.mkdtempSync(process.env.TEMP+"/genie-say-"),o=t+"/say.js";r.writeFileSync(o,"var args = [];for(var i = 0; i < WScript.Arguments.length; i++) args.push(WScript.Arguments.Item(i));WScript.CreateObject('SAPI.SpVoice').Speak('<volume level=\"100\">'+'<rate speed=\"2\">'+'<pitch middle=\"0\">'+args.join(' ')+'</pitch>'+'</rate>'+'</volume>', 8);"),n.execSync(`start wscript ${o} "${e}"`),r.unlinkSync(o),r.rmdirSync(t)}}),S=module.exports.loadConfig=(e=>{let t=`${a()}/.genie/${e.config}`;try{r.accessSync(t)}catch(r){f(`設定ファイル（.genie/${e.config}）が見つかりませんでした。`)}return require(t).genie}),w=module.exports.isWindows=(()=>"win32"===process.platform),_=module.exports.isMac=(()=>"darwin"===process.platform),y=module.exports.hasDockerMachineEnv=(()=>{return 0===n.spawnSync("docker-machine").status}),f=module.exports.Error=(e=>{console.log(),d(`エラーが発生しました。\n${e}`,"danger",1),process.exit()}),$=module.exports.dockerDown=((r,t)=>new Promise((s,i)=>{let l=k(t,r),p=[];for(let e=0;e<l.length;e++)p.push(new Promise((r,t)=>{process.stdout.write(o.blackBright(`  ${l[e].name} (${l[e].id}) ...`));let s=n.spawnSync("docker",["rm","-f",l[e].id]);s.stderr.toString()?(process.stdout.write(o.red(" delete NG!\n")),t(s.stderr.toString())):(process.stdout.write(o.green(" deleted.\n")),r())}));e(function*(){yield Promise.all(p).catch(function(e){return e})})(),s()})),b=module.exports.dockerUp=((e,r)=>"postgresql"===e?new Promise((e,t)=>{try{let o=Object.keys(r.db.postgresql);for(let s=0;s<o.length;s++){let i=r.db.postgresql[o[s]],l=[];l.push("run","-d","-it"),l.push("-e","TERM=xterm"),l.push("--name",`${r.up.base_name}-postgresql-${o[s]}`),l.push("--label",`genie_project_dir="${r.up.label.genie_project_dir}"`),r.up.label.genie_shadow&&l.push("--label","genie_shadow"),l.push("-v",`${r.up.label.genie_project_dir}/.genie/root/opt/postgresql/:/opt/postgresql/`),l.push("-e",`POSTGRES_LABEL=${o[s]}`),l.push("-e",`POSTGRES_HOST=${i.host}`),l.push("-e",`POSTGRES_DB=${i.name}`),l.push("-e",`POSTGRES_USER=${i.user}`),l.push("-e",`POSTGRES_PASSWORD=${i.pass}`),l.push("-e",`POSTGERS_ENCODING=${i.encoding}`),l.push("-e",`POSTGERS_LOCALE=${i.locale}`),r.core.docker.network&&l.push(`--net=${r.core.docker.network}`),r.core.docker.options&&l.push(`${r.core.docker.options}`),i.external_port&&l.push("-p",`${i.external_port}:5432`),l.push("--entrypoint=/opt/postgresql/before-entrypoint.sh"),l.push("--restart=always"),l.push(i.repository),l.push("postgres");let p=n.spawnSync("docker",l);p.stderr.toString()?t(p.stderr.toString()):e()}e()}catch(e){t(e)}}):"mysql"===e?new Promise((e,t)=>{try{let o=Object.keys(r.db.mysql);for(let s=0;s<o.length;s++){let i=r.db.mysql[o[s]],l=[];l.push("run","-d","-it"),l.push("-e","TERM=xterm"),l.push("--name",`${r.up.base_name}-mysql-${o[s]}`),l.push("--label",`genie_project_dir="${r.up.label.genie_project_dir}"`),r.up.label.genie_shadow&&l.push("--label","genie_shadow"),l.push("-v",`${r.up.label.genie_project_dir}/.genie/root/opt/mysql/:/opt/mysql/`),l.push("-e",`MYSQL_LABEL=${o[s]}`),l.push("-e",`MYSQL_ROOT_PASSWORD=${i.pass}`),l.push("-e",`MYSQL_DATABASE=${i.name}`),l.push("-e",`MYSQL_USER=${i.user}`),l.push("-e",`MYSQL_PASSWORD=${i.pass}`),l.push("-e",`MYSQL_CHARSET=${i.charset}`),r.core.docker.network&&l.push(`--net=${r.core.docker.network}`),r.core.docker.options&&l.push(`${r.core.docker.options}`),i.external_port&&l.push("-p",`${i.external_port}:3306`),l.push("--entrypoint=/opt/mysql/before-entrypoint.sh"),l.push("--restart=always"),l.push(i.repository),l.push("mysqld"),i.charset&&l.push(`--character-set-server=${i.charset}`),i.collation&&l.push(`--collation-server=${i.collation}`);let p=n.spawnSync("docker",l);p.stderr.toString()?t(p.stderr.toString()):e()}e()}catch(e){t(e)}}):"genie"===e?new Promise((e,t)=>{let o=[];o.push("run","-d","-it"),o.push("-e","TERM=xterm"),o.push("-e","LANG=ja_JP.UTF-8"),o.push("-e","LC_ALL=ja_JP.UTF-8"),o.push("-v",r.up.label.genie_project_dir+"/.genie/root/opt:/opt"),o.push("--label",`genie_project_dir="${r.up.label.genie_project_dir}"`),r.up.label.genie_shadow&&o.push("--label","genie_shadow"),r.lang.perl.cpanfile_enabled&&o.push("-e","PERL5LIB=/perl/cpanfile-modules/lib/perl5");try{let e=Object.keys(r.db.mysql);for(let t=0;t<e.length;t++){let s=`${r.up.base_name}-mysql-${e[t]}`;o.push("--link",s),o.push("--add-host",r.db.mysql[e[t]].host+":"+x(s,r))}}catch(e){}p(o),e()}):void 0),k=module.exports.existContainers=((e,r)=>{let t=["--filter",`label=genie_project_dir="${e.up.label.genie_project_dir}"`];e.up.label.genie_shadow&&t.push("--filter","label=genie_shadow"),r&&t.push("--filter",`name=${r}`);let o=n.spawnSync("docker",["ps","-a","--format","{{.ID}}\t{{.Names}}",...t]).stdout.toString().split(/\n/),s=[];for(let e=0;e<o.length;e++){let r=o[e].split(/\s+/);r[0]&&s.push({id:r[0],name:r[1]})}return!!s.length&&s}),x=module.exports.getContainerIp=((e,r)=>{try{let t;(t=r.core.docker.network?n.spawnSync("docker",["inspect",`--format={{.NetworkSettings.Networks.${r.core.docker.network}.IPAddress}}`,e]):n.spawnSync("docker",["inspect","--format={{.NetworkSettings.IPAddress}}",e])).stderr.toString()?f(t.stderr.toString()):t.stdout.toString()}catch(e){f(e)}});
},{}],1:[function(require,module,exports) {
"use strict";var e=require("constants");function s(e){return function(){var s=e.apply(this,arguments);return new Promise(function(e,n){return function o(t,r){try{var i=s[t](r),a=i.value}catch(e){return void n(e)}if(!i.done)return Promise.resolve(a).then(function(e){o("next",e)},function(e){o("throw",e)});e(a)}("next")})}}const n=require("optimist"),o=require("cli-color"),t=require("child_process"),r=require("./libs.js"),i=r.d,a=r.h;let l=n.usage("Usage: genie|g [Commands] [Options]").options("mode",{alias:"m",default:"",describe:"実行モードを指定可能"}).options("config",{alias:"c",default:"config.js",describe:"設定ファイルを指定可能"}).options("help",{alias:"h",describe:"説明表示"}).argv;if("demo"===l._[0])s(function*(){console.log(),r.Message("サンプル：default","default"),r.Message("サンプル：primary","primary"),r.Message("サンプル：success","success"),r.Message("サンプル：danger","danger"),r.Message("サンプル：warning","warning"),r.Message("サンプル：info","info"),r.Message("改行込み、1ライン入れも可能。\ntest1\ntest2\ntest3","default",1);let e=yield r.Input("入力BOX（入力文字を発音しますのでご注意）：",20);r.Message("入力された文字："+e),r.Say(e);try{throw new Error("エラーテスト（終了コード255）")}catch(e){console.log(e),process.exit(255)}process.exit()})();else if("ls"===l._[0]){let e=n.usage("Usage: genie|g ls [Options]").options("long",{alias:"l",describe:"コンテナ一覧がもうちょっとだけ詳細に出ます"}).argv;if(e.help&&(n.showHelp(),process.exit()),r.hasDockerMachineEnv()){console.log("\n  DockerMachine一覧");let e=t.spawnSync("docker-machine",["ls"]);r.Message(e.stdout.toString(),"primary",1)}{console.log("\n  イメージ一覧");let e=t.spawnSync("docker",["images"]);r.Message(e.stdout.toString(),"primary",1)}{console.log("\n  データボリューム一覧");let e=t.spawnSync("docker",["volume","ls"]);r.Message(e.stdout.toString(),"primary",1)}{console.log("\n  コンテナ一覧");let s=["--format","table {{.ID}}\t{{.Image}}\t{{.Status}}\t{{.Ports}}\t{{.Names}}"];e.long&&(s=["--format","table {{.ID}}\t{{.Image}}\t{{.Command}}\t{{.CreatedAt}}\t{{.Status}}\t{{.Ports}}\t{{.Names}}\t{{.Labels}}"]);let n=t.spawnSync("docker",["ps","-a",...s]);r.Message(n.stdout.toString(),"primary",1)}process.exit()}else if("config"===l._[0]){let e=n.usage("Usage: genie|g config [Options]").options("dump",{alias:"d",describe:"設定値を確認します。"}).argv;if(e.help)n.showHelp();else{let s=r.loadConfig(e);if(e.dump)i(s);else{let s=`${r.getProjectRootDir()}/.genie/${e.config}`;r.isWindows()?t.execSync(`start ${s}`):r.isMac()&&t.execSync(`open ${s}`)}}process.exit()}else if("clean"===l._[0]){n.usage("Usage: genie|g clean [Options]").options("locked",{alias:"l",describe:"`locked`を含むDataVolumeも削除"}).argv.help&&n.showHelp(),process.exit()}else if("langver"===l._[0]){let e=n.usage("Usage: genie|g langver [Options]").options("php",{describe:"PHPの利用可能なバージョン一覧を表示"}).options("perl",{describe:"Perlの利用可能なバージョン一覧を表示"}).options("ruby",{describe:"Rubyの利用可能なバージョン一覧を表示"}).options("node",{describe:"Node.jsの利用可能なバージョン一覧を表示"}).argv;if(e.help)n.showHelp();else if(e.php){let e=t.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/phpenv/plugins/php-build/bin/php-build --definitions"]);r.Message(e.stdout.toString(),"primary")}else if(e.perl){let e=t.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/plenv/plugins/perl-build/perl-build  --definitions"]);r.Message(e.stdout.toString(),"primary")}else if(e.ruby){let e=t.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/rbenv/plugins/ruby-build/bin/ruby-build  --definitions"]);r.Message(e.stdout.toString(),"primary")}else if(e.node){let e=t.spawnSync("docker",["run","--rm","--entrypoint=bash","kazaoki/genie","-c","/root/.anyenv/envs/ndenv/plugins/node-build/bin/node-build  --definitions"]);r.Message(e.stdout.toString(),"primary")}else n.showHelp();process.exit()}else if("up"===l._[0]){let e=n.usage("Usage: genie|g up [Options]").options("shadow",{alias:"s",describe:"データをマウントではなくコンテナにコピーした別のコンテナを起動する"}).argv;e.help&&n.showHelp();let o=r.loadConfig(e);o.up={},o.up.base_name=e.shadow?o.core.docker.name+"-SHADOW":o.core.docker.name,o.up.label={genie_project_dir:r.getProjectRootDir()},e.shadow&&(o.up.label.genie_shadow=1);try{let e=o.core.memo.up;e&&r.Messages(e)}catch(e){Error("メモの設定が異常です。")}s(function*(){r.existContainers(o)&&(yield Promise.all([r.dockerDown("/"+o.up.base_name+"-postgresql",o),r.dockerDown("/"+o.up.base_name+"-mysql",o),r.dockerDown("/"+o.up.base_name+"$",o)]).catch(function(e){return e}));let e=[];try{Object.keys(o.db.postgresql).length&&e.push(r.dockerUp("postgresql",o))}catch(e){Error(e)}try{Object.keys(o.db.mysql).length&&e.push(r.dockerUp("mysql",o))}catch(e){Error(e)}yield Promise.all(e).catch(function(e){r.Error(e)}),r.dockerUp("genie",o),a("起動完了!!"),process.exit()})()}else console.error(n.help()+"\nCommands:\n  init    \n  config  設定を確認する\n  ls      Dockerコンテナ状況を確認する\n  up      Dockerコンテナを起動する\n  down    \n  update  \n  cli     \n  reject  \n  clean   \n  build   \n  langver 各種言語の利用可能なバージョンを確認する\n  mysql   \n  psql    \n  open    \n  ngrok   \n  logs    \n  dlsync  \n  httpd   \n  demo    デモ\n"),process.exit();
},{"./libs.js":3}]},{},[1])